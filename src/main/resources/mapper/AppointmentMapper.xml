<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.swyp3.babpool.domain.appointment.dao.AppointmentRepository">

    <resultMap id="appointmentSendResponse" type="com.swyp3.babpool.domain.appointment.application.response.AppointmentSendResponse">
        <id property="appointmentId" column="appointment_id"/>
        <result property="profileId" column="profile_id"/>
        <result property="userNickName" column="user_nick_name"/>
        <result property="profileImageUrl" column="profile_image_url"/>
        <result property="appointmentStatus" column="appointment_status"/>
        <result property="appointmentCreateDate" column="appointment_create_date"/>
        <result property="appointmentFixDateTime" column="appointment_fix_date_time"/>
    </resultMap>

    <resultMap id="appointmentReceiveResponse" type="com.swyp3.babpool.domain.appointment.application.response.AppointmentReceiveResponse">
        <id property="appointmentId" column="appointment_id"/>
        <result property="profileId" column="profile_id"/>
        <result property="userNickName" column="user_nick_name"/>
        <result property="profileImageUrl" column="profile_image_url"/>
        <result property="appointmentStatus" column="appointment_status"/>
        <result property="appointmentCreateDate" column="appointment_create_date"/>
        <result property="appointmentFixDateTime" column="appointment_fix_date_time"/>
    </resultMap>

    <resultMap id="appointmentHistoryRefuseResponse" type="com.swyp3.babpool.domain.appointment.application.response.AppointmentHistoryRefuseResponse">
        <id property="appointmentId" column="appointment_id"/>
        <result property="appointmentReceiverProfileId" column="profile_id"/>
        <result property="appointmentReceiverUserNickname" column="user_nick_name"/>
        <result property="appointmentReceiverProfileImageUrl" column="profile_image_url"/>
        <result property="appointmentStatus" column="appointment_status"/>
        <result property="rejectCreateDate" column="reject_create_date"/>
    </resultMap>

    <!--  밥약 알림 - 특정 사용자가 보낸 밥약 알림  -->
    <select id="findAppointmentListByRequesterId" resultMap="appointmentSendResponse" parameterType="long">
        SELECT
            appoint.appointment_id AS appointmentId,
            profile.profile_id AS appointmentReceiverProfileId,
            account.user_nick_name AS appointmentReceiverUserNickname,
            profile.profile_image_url AS appointmentReceiverProfileImageUrl,
            appoint.appointment_status AS appointmentStatus,
            appoint.appointment_create_date AS appointmentCreateDate,
            DATE_FORMAT(datetime.possible_datetime, '%Y-%m-%d %H:00:00') as appointmentFixDateTime
--             IF(appoint.appointment_status = 'ACCEPT' OR appoint.appointment_status = 'DONE',
--                DATE_FORMAT(datetime.possible_datetime, '%Y-%m-%d %H:%i:%s'),
--                NULL
--             ) AS appointmentFixDateTime
        FROM t_appointment appoint
            INNER JOIN t_profile profile ON appoint.appointment_receiver_id = profile.user_id
            INNER JOIN t_user_account account ON appoint.appointment_receiver_id = account.user_id
            LEFT JOIN t_possible_datetime datetime ON datetime.possible_datetime_id = appoint.possible_datetime_id
        WHERE
            appoint.appointment_sender_id = #{requesterUserId}
--         AND appoint.appointment_status IN ('WAITING', 'ACCEPTED')
        ORDER BY appoint.appointment_create_date DESC;
    </select>

    <!--  밥약 알림 - 특정 사용자가 받은 밥약 알림  -->
    <select id="findAppointmentListByReceiverId" resultMap="appointmentReceiveResponse" parameterType="long">
        SELECT
            appoint.appointment_id AS appointmentId,
            profile.profile_id AS appointmentReceiverProfileId,
            account.user_nick_name AS appointmentSenderUserNickname,
            profile.profile_image_url AS appointmentSenderProfileImageUrl,
            appoint.appointment_status AS appointmentStatus,
            appoint.appointment_create_date AS appointmentCreateDate,
            IF(appoint.appointment_status = 'ACCEPT' OR appoint.appointment_status = 'DONE',
               DATE_FORMAT(pdatetime.possible_datetime, '%Y-%m-%d %H:00:00'),
               NULL
            ) AS appointmentFixDateTime
        FROM t_appointment appoint
            INNER JOIN t_profile profile ON appoint.appointment_sender_id = profile.user_id
            INNER JOIN t_user_account account ON appoint.appointment_sender_id = account.user_id
            LEFT JOIN t_possible_datetime pdatetime ON pdatetime.possible_datetime_id = appoint.possible_datetime_id
        WHERE
            appoint.appointment_receiver_id = #{receiverUserId}
        AND appoint.appointment_status IN ('WAITING', 'ACCEPTED')
        ORDER BY appoint.appointment_create_date DESC;
    </select>

<!--    <select id="countAcceptedAppointmentByReceiverIdAndPossibleTimeId" resultType="int" parameterType="map">-->
<!--        SELECT-->
<!--            COUNT(*) AS count-->
<!--        FROM t_appointment-->
<!--        <where>-->
<!--            appointment_receiver_id = #{targetReceiverUserId}-->
<!--          AND appointment_status = 'ACCEPT'-->
<!--            <if test="possibleTimeIdList != null and !possibleTimeIdList.isEmpty()">-->
<!--                <foreach collection="possibleTimeIdList" item="possibleTimeId" open="AND possible_time_id IN (" close=")" separator=",">-->
<!--                    #{possibleTimeId}-->
<!--                </foreach>-->
<!--            </if>-->
<!--        </where>-->
<!--    </select>-->

    <select id="findByAppointmentId" resultType="com.swyp3.babpool.domain.appointment.domain.Appointment" parameterType="long">
        SELECT
            appointment_id,
            appointment_sender_id,
            appointment_receiver_id,
            possible_datetime_id,
            appointment_status,
            appointment_content,
            appointment_create_date,
            appointment_modify_date
        FROM t_appointment
        WHERE
            appointment_id = #{appointmentId}
    </select>

    <!--  밥약 히스토리 - 완료된 요청 리스트  -->
    <select id="findDoneAppointmentListByRequesterId" resultType="com.swyp3.babpool.domain.appointment.application.response.AppointmentHistoryDoneResponse" parameterType="long">
        SELECT
            appoint.appointment_id AS appointmentId,
            profile.profile_id AS appointmentReceiverProfileId,
            account.user_nick_name AS appointmentReceiverUserNickname,
            profile.profile_image_url AS appointmentReceiverProfileImageUrl,
            appoint.appointment_status AS appointmentStatus,
            DATE_FORMAT(pdatetime.possible_datetime, '%Y-%m-%d %H:00:00') as appointmentFixDateTime,
            IF(review.review_id is NULL AND DATE_ADD(DATE_FORMAT(pdatetime.possible_datetime, '%Y-%m-%d %H:00:00'), INTERVAL 3 DAY) > NOW(), 'REVIEW_REQUIRED', 'REVIEW_NOT_REQUIRED') AS reviewRequired
        FROM t_appointment appoint
                 INNER JOIN t_profile profile ON appoint.appointment_receiver_id = profile.user_id
                 INNER JOIN t_user_account account ON appoint.appointment_receiver_id = account.user_id
                 LEFT JOIN t_possible_datetime pdatetime ON pdatetime.possible_datetime_id = appoint.possible_datetime_id
                 LEFT JOIN t_review review ON appoint.appointment_id = review.appointment_id
        WHERE
            appoint.appointment_sender_id = #{requesterUserId}
          AND appoint.appointment_status IN ('DONE', 'ACCEPTED');
    </select>

    <!--  밥약 히스토리 - 거절 당한 요청 리스트  -->
    <select id="findRefuseAppointmentListByRequesterId" resultMap="appointmentHistoryRefuseResponse">
        select appoint.appointment_id,
               profile.profile_id,
               account.user_nick_name,
               profile.profile_image_url,
               appoint.appointment_status,
               reject.reject_create_date
        from t_appointment appoint
                 inner join t_profile profile on appoint.appointment_receiver_id = profile.user_id
                 inner join t_user_account account on appoint.appointment_receiver_id = account.user_id
                 left join t_reject reject on appoint.appointment_id = reject.appointment_id
        where appoint.appointment_sender_id = #{requesterUserId}
          and appoint.appointment_status IN ('REJECTED', 'EXPIRED')
        ORDER BY reject.reject_create_date DESC;
    </select>

<!--    <select id="findAppointmentPossibleDateTimeByProfileId" parameterType="long" resultType="com.swyp3.babpool.domain.appointment.application.response.AppointmentPossibleDateTimeResponse">-->
<!--        SELECT-->
<!--            pdate.profile_id AS profileId,-->
<!--            ptime.possible_time_id AS possibleTimeId,-->
<!--            pdate.possible_date_id AS possibleDateId,-->
<!--            pdate.possible_date AS possibleDate,-->
<!--            ptime.possible_time_start AS possibleTime-->
<!--        FROM t_possible_date pdate-->
<!--            INNER JOIN t_possible_time ptime ON pdate.possible_date_id = ptime.possible_date_id-->
<!--            LEFT JOIN t_appointment appoint ON ptime.possible_time_id = appoint.possible_time_id-->
<!--                        AND appoint.appointment_status IN ('ACCEPT', 'DONE')-->
<!--        WHERE-->
<!--            pdate.profile_id = #{profileId}-->
<!--        AND pdate.possible_date >= DATE_FORMAT(NOW() ,'%Y-%m-01')-->
<!--        AND appoint.appointment_id IS NULL-->
<!--        ORDER BY pdate.possible_date ASC, ptime.possible_time_start ASC;-->
<!--    </select>-->

<!--    <select id="checkReferenceInAppointmentRequestTime" resultType="boolean" parameterType="long">-->
<!--        SELECT EXISTS(-->
<!--            SELECT 1-->
<!--            FROM t_appointment_request_time-->
<!--            WHERE possible_time_id = #{timeId}-->
<!--        )-->
<!--    </select>-->

    <select id="findAllBySenderUserId" resultType="com.swyp3.babpool.domain.appointment.domain.Appointment" parameterType="long">
        SELECT
            appointment_id,
            appointment_sender_id,
            appointment_receiver_id,
            possible_datetime_id,
            appointment_status,
            appointment_content,
            appointment_create_date,
            appointment_modify_date
        FROM t_appointment
        WHERE appointment_sender_id = #{senderUserId}
    </select>

    <select id="findAcceptAppointment" resultType="com.swyp3.babpool.domain.appointment.application.response.AppointmentAcceptResponse">
        SELECT tappointment.appointment_id AS appointmentId,
               tuser.user_nick_name AS requesterNickName,
               tprofile.profile_image_url AS requesterProfileImageUrl,
               tuser.user_grade AS requesterGrade,
               tprofile.profile_intro AS requesterIntro,
               tdatetime.possible_datetime AS possibleDateTime,
               tprofile.profile_contact_phone AS requesterContactPhone,
            tprofile.profile_contact_chat AS requesterContactChat,
               tappointment.appointment_content AS appointmentContent
        FROM t_appointment tappointment
            INNER JOIN t_possible_datetime tdatetime ON tdatetime.possible_datetime_id = tappointment.possible_datetime_id
            INNER JOIN t_user_account tuser ON tappointment.appointment_sender_id = tuser.user_id
            INNER JOIN t_profile tprofile ON tprofile.user_id = tuser.user_id
        WHERE tappointment.appointment_id = #{appointmentId}
    </select>

    <select id="findRejectAppointmentDetail">
        SELECT
            ua.user_nick_name AS receiverNickName,
            p.profile_image_url AS receiverProfileImage,
            ua.user_grade AS receiverGrade,
            p.profile_intro AS receiverProfileIntro,
            GROUP_CONCAT(k.keyword_name) AS keywords,
            r.reject_cause_content AS message
        FROM
            t_appointment tappointment
                INNER JOIN t_user_account ua ON ua.user_id = tappointment.appointment_receiver_id
                INNER JOIN t_profile p ON ua.user_id = p.user_id
                LEFT JOIN t_m_user_keyword muk ON ua.user_id = muk.user_id
                LEFT JOIN t_keyword k ON muk.keyword_id = k.keyword_id
                LEFT JOIN t_reject r ON r.appointment_id = tappointment.appointment_id
        WHERE
            tappointment.appointment_id = #{appointmentId}
        GROUP BY
            ua.user_id
    </select>

    <select id="findExpireAppointmentDetail" resultType="com.swyp3.babpool.domain.appointment.application.response.AppointmentRefuseDetailResponse">
        SELECT
            tuser.user_nick_name AS receiverNickName,
            tprofile.profile_image_url AS receiverProfileImage,
            tuser.user_grade AS receiverGrade,
            tprofile.profile_intro AS receiverProfileIntro,
            GROUP_CONCAT(tkeyword.keyword_name) AS keywords,
            '시간만료' AS message
        FROM t_appointment tappointment
                 INNER JOIN t_user_account tuser ON tuser.user_id = tappointment.appointment_receiver_id
                 INNER JOIN t_profile tprofile ON ua.user_id = tprofile.user_id
                 LEFT JOIN t_m_user_keyword muk ON tuser.user_id = muk.user_id
                 LEFT JOIN t_keyword tkeyword ON muk.keyword_id = tkeyword.keyword_id
        WHERE tappointment.appointment_id = #{appointmentId}
        GROUP BY
            tuser.user_id
    </select>

    <!-- =================================== INSERT =================================== -->

    <insert id="saveAppointment" parameterType="com.swyp3.babpool.domain.appointment.domain.Appointment"
            useGeneratedKeys="true" keyProperty="appointmentId">
        INSERT INTO t_appointment
        (
            appointment_id,
            appointment_sender_id,
            appointment_receiver_id,
            appointment_status,
            appointment_content,
            appointment_create_date,
            appointment_modify_date,
            possible_datetime_id
        )
        VALUES
        (
            #{appointmentId},
            #{appointmentSenderId},
            #{appointmentReceiverId},
            'WAITING',
            #{appointmentContent},
            #{appointmentCreateDate}, #{appointmentModifyDate},
             #{possibleDateTimeId}
        );
    </insert>



    <!-- ######################################## UPDATE ######################################## -->

    <update id="updateStatusToExpiredWhereStatusIsWaitingAndAppointmentCreateDatePassedOneDay">
        <![CDATA[
        UPDATE t_appointment
        SET appointment_status='EXPIRED',
            appointment_modify_date=CURRENT_TIMESTAMP()
        WHERE
            appointment_status='WAITING'
            AND DATE_ADD(appointment_create_date, INTERVAL 1 DAY) < CURRENT_TIMESTAMP();
        ]]>
    </update>

    <update id="updateAppointmentStatus">
        UPDATE t_appointment
        SET appointment_status = #{status},
            appointment_modify_date=CURRENT_TIMESTAMP()
        WHERE appointment_id = #{targetAppointmentId}
    </update>

    <!-- =================================== DELETE =================================== -->

    <delete id="deleteAppointmentById" parameterType="long">
        DELETE FROM t_appointment
        WHERE appointment_id = #{appointmentId}
    </delete>

</mapper>
